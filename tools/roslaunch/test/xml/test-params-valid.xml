<launch>

  <!-- 

  Parameter Server parameters. You can omit the 'type' attribute if
  value is unambiguous. Supported types are str, int, double, bool.
  You can also specify the contents of a file instead using the
  'textfile' or 'binfile' attributes.
  
  -->
  <param name="somestring1" value="bar2" />
  <!-- force to string instead of integer -->
  <param name="somestring2" value="10" type="str" />
  
  <param name="someinteger1" value="1" type="int" />
  <param name="someinteger2" value="2" />
  
  <param name="somefloat1" value="3.14159" type="double" />  
  <param name="somefloat2" value="5.0" />

  <param name="someyaml1" value="[0, 1, 2]" type="yaml" />
  <param name="someyaml2" value="{string1: bar2, string2: '10', integer1: 1, float1: 3.14, list1: [0, 1, 2], list2: ['a', 'b', 'c']}" type="yaml" />
  
  <!-- you can set parameters in child namespaces -->
  <param name="wg/wgchildparam" value="a child namespace parameter 1" />  
  <group ns="wg2"> 
    <param name="wg2childparam1" value="a child namespace parameter 2" />  
    <param name="wg2childparam2" value="a child namespace parameter 3" />  
  </group>

  <!-- upload the contents of a file as a param -->
  <param name="configfile" textfile="$(find roslaunch)/resources/example.launch" />
  <!-- upload the contents of a file as base64 binary as a param -->
  <param name="binaryfile" binfile="$(find roslaunch)/resources/example.launch" />
  <!-- upload the output of a command as a param. -->
  <param name="commandoutput" command="cat &quot;$(find roslaunch)/resources/example.launch&quot;" unless="$(eval optenv('OS', 'unknown').lower().startswith('windows'))" />

  <!-- upload the output of a command as a param as types. -->
  <param name="commandoutputinteger" type="int" command="echo 0" />
  <param name="commandoutputdouble" type="double" command="echo 10" />
  <param name="commandoutputbool" type="bool" command="echo true" />
  <param name="commandoutputyaml" type="yaml" command="cat &quot;$(find roslaunch)/test/params.yaml&quot;" unless="$(eval optenv('OS', 'unknown').lower().startswith('windows'))" />


  <!-- test that we can override params -->
  <param name="override" value="fail" />
  <param name="override" value="pass" />
  
</launch>
